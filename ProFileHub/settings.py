"""
Django settings for ProFileHub project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv


# Load .env file

BASE_DIR = Path(__file__).resolve().parent.parent.parent
dotenv_path = BASE_DIR / 'ProFileHub' / '.env'
load_dotenv(dotenv_path)
print(f"Loaded USERNAME: {os.getenv('USERNAME')}")






# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/


SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'default_secret_key')


DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'mydevportfolio-444617.uc.r.appspot.com', 'web-api-90517001107.us-east1.run.app', '*']




# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'PortfolioApp',
    'crispy_forms',
    'crispy_bootstrap5',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',


]

CACHE_MIDDLEWARE_SECONDS = 0  # Disable cache
CACHE_MIDDLEWARE_KEY_PREFIX = 'dev_cache'

ROOT_URLCONF = 'ProFileHub.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
         'DIRS': [BASE_DIR / 'PortfolioApp/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ProFileHub.wsgi.application'


# allow django to recocnnise my bootstarp 5 
CRISPY_ALLOWED_TEMPLATES_PACKS ="bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5",


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases





DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME', 'default_db_name'),
        'USER': os.getenv('DB_USER', 'default_user'),
        'PASSWORD': os.getenv('DB_PASSWORD', 'default_password'),
        'HOST': os.getenv('DB_HOST', 'localhost'),
        'PORT': os.getenv('DB_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/


from pathlib import Path
import os

# Define the base directory of your project
BASE_DIR = Path(__file__).resolve().parent.parent

# Static file URL
STATIC_URL = '/static/'

# Static files directory within the app
STATICFILES_DIRS = [
    BASE_DIR / 'PortfolioApp' / 'static',  # Static files in the PortfolioApp
]

# Static files collected root (used by collectstatic)
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Optional: Whitenoise settings for production
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'



# Google Cloud Storage Configuration
DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
GS_BUCKET_NAME = 'cloudcv'

# Credentials File
GS_CREDENTIALS = os.getenv('GOOGLE_APPLICATION_CREDENTIALS')

# Media Settings
MEDIA_URL = f'https://storage.googleapis.com/cloudcv/'


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

