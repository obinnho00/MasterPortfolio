name: 'Build and Deploy to GKE'

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: 'mydevportfolio-444617'
  GAR_LOCATION: 'us-east1'
  GKE_CLUSTER: 'django-cluster'
  GKE_ZONE: 'us-east1-b'
  DEPLOYMENT_NAME: 'django-app'
  REPOSITORY: 'django-app-repo'
  IMAGE: 'django-app-image'

jobs:
  setup-build-publish-deploy:
    name: 'Setup, Build, Publish, and Deploy'
    runs-on: 'ubuntu-latest'
    environment: 'production'

    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        run: |-
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}" > gcloud-key.json
          gcloud auth activate-service-account --key-file=gcloud-key.json
          gcloud config set project ${{ env.PROJECT_ID }}

      # Docker Authentication for Artifact Registry
      - name: Docker Auth
        uses: docker/login-action@v3
        with:
          username: oauth2accesstoken
          password: $(gcloud auth print-access-token)
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      # Get GKE credentials
      - name: Set up GKE credentials
        run: gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }}

      # Verify Kubernetes Context
      - name: Verify Kubernetes Context
        run: kubectl config get-contexts

      # Build and Push Docker Image
      - name: Build and Push Docker Container
        run: |-
          DOCKER_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${GITHUB_SHA}"
          docker build -t "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      # Deploy to GKE
      - name: Deploy to GKE
        run: |-
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} \
            django-container=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${GITHUB_SHA}
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
